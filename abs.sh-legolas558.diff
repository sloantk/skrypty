--- /usr/lib/yaourt/abs.sh	2009-10-20 10:53:50.000000000 +0200
+++ /usr/lib/yaourt/abs.sh	2009-10-20 16:45:01.000000000 +0200
@@ -44,9 +44,9 @@
 	#if [ "$repository" = "testing" ]; then
 	#       	repository="all"
 	#fi
-	
+
 	# Manage specific Community and Testing packages
-	if [ "$repository" = "community" ]; then 
+	if [ "$repository" = "community" ]; then
 		# Grab link to download pkgbuild from AUR Community
 		[ "$MAJOR" != "getpkgbuild" ] && msg $(eval_gettext 'Searching Community AUR page for $PKG')
 		aurid=`findaurid "$PKG"`
@@ -67,23 +67,15 @@
 		# Grab link to download pkgbuild from new repos.archlinux.org
 		source /etc/makepkg.conf
 		[ -z "$CARCH" ] && CARCH="i686"
-		wget -q "${ABS_REPOS_URL}/$PKG/repos/" -O - > "$YAOURTTMPDIR/page.tmp"
-		if [ $? -ne 0 ] || [ ! -s "$YAOURTTMPDIR/page.tmp" ]; then
-			echo $(eval_gettext '$PKG was not found on abs repos.archlinux.org'); manage_error 1 || continue
-		fi
-		repos=( `grep "name=.*i686" "$YAOURTTMPDIR/page.tmp" | awk -F "\"" '{print $2}'` )
-		# if package exists in testing branch and in current branch, select the right url
-		if [ ${#repos[@]} -gt 1 -a $USETESTING -eq 1 ]; then
-			url="$ABS_REPOS_URL/$PKG/repos/${repos[1]}/"
-		else
-			url="$ABS_REPOS_URL/$PKG/repos/${repos[0]}/"
-		fi
+		## legolas558: full path at WebSVN
+		url="${ABS_REPOS_URL}/$PKG/repos/${repository}-${CARCH}/"
 	fi
 
 	# Download Files on SVN package page
 	wget -q "$url" -O "$YAOURTTMPDIR/page.tmp"
 	manage_error $? || continue
-	files=( `grep "name=.*href=\"/viewvc.cgi/" "$YAOURTTMPDIR/page.tmp" | awk -F "\"" '{print $2}'`)
+	files=( `sed -nr 's/(.*)href="?([^ ">]*).*/\2\n\1/; T; P; D;' "$YAOURTTMPDIR/page.tmp" | grep op=dl \
+		| grep -v isdir=1 | sed -e 's/\&amp;/\&/g' `)
 	if [ ${#files[@]} -eq 0 ]; then echo "No file found for $PKG"; manage_error 1 || continue; fi
 	echo
 	if [ "$MAJOR" != "getpkgbuild" ]; then
@@ -98,12 +90,11 @@
 
 	for file in ${files[@]}; do
 		echo -e "   ${COL_BLUE}-> ${NO_COLOR}${COL_BOLD}$(eval_gettext 'Downloading ${file} in build dir')${NO_COLOR}"
-		if [ "$repository" = "community" ]; then
-			eval $INENGLISH wget --tries=3 --waitretry=3 --no-check-certificate "$ABS_REPOS_URL/community/$category/$PKG/$file?root=community\&view=co" -O $file
-		else
-			eval $INENGLISH wget --tries=3 --waitretry=3 --no-check-certificate "${url}${file}?view=co" -O $file
-		fi
+		pfname=$( echo $file | awk -F[/?] '{ print $(NF-1) }' )
+		## legolas558: do not use eval since will exit the script
+		$INENGLISH wget --tries=3 --waitretry=3 --no-check-certificate -O "$pfname" "http://repos.archlinux.org${file}"
 	done
+	unset pfname
 
 	[ "$MAJOR" = "getpkgbuild" ] && return 0
 
@@ -114,15 +105,15 @@
 	else
 		runasroot=0
 	fi
-	
+
 	readPKGBUILD
 	if [ -z "$pkgname" ]; then
        		echo $(eval_gettext 'Unable to read PKGBUILD for $PKG')
 		manage_error 1 || continue
 	fi
-	
+
 	msg "$pkgname $pkgver-$pkgrel $([ "$branchtags" = "TESTING" ] && echo -e "$COL_BLINK[TESTING]")"
-	
+
 	# Customise PKGBUILD
 	[ $CUSTOMIZEPKGINSTALLED -eq 1 ] && customizepkg --modify
 
